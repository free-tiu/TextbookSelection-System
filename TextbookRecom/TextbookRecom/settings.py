"""
Django settings for TextbookRecom project.

Generated by 'django-admin startproject' using Django 3.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path
import sys

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# 设置根路径apps 将自定义的apps包添加到Python搜寻环境变量中
sys.path.insert(0,os.path.join(BASE_DIR,'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-alu$ebul7ai=gnp9x8zl6&_e_e*z4al5e8u2$w*+*+$#tc#654'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    # 修改后台模板为SimpleUI
    'simpleui',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users.apps.UsersConfig',
    'bookclass.apps.BookclassConfig',
    'operations.apps.OperationsConfig',
    'haystack',     # 注册全文检索框架
]

AUTH_USER_MODEL = 'users.Users'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'TextbookRecom.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media', #修改处理器
                # 添加全局变量
                'TextbookRecom.contexts.lang',
            ],
        },
    },
]

WSGI_APPLICATION = 'TextbookRecom.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': BASE_DIR / 'db.sqlite3',
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'tbook',   # 访问MySQL的数据库的名称
        'USER': 'root',     # 数据库用户名
        'PASSWORD': 'root',     # 数据库密码
        'HOST': '127.0.0.1',    # 数据库服务器地址
        'PORT': '3306',     # 数据库服务器端口号
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'   # 网页默认中文显示

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT=os.path.join(BASE_DIR,'/static/')
STATICFILES_DIRS = [
    # BASE_DIR / "static/",
    ## 定义的是项目所在的完整路径，需要在项目根路径下创建一个名为”static“的目录
    os.path.join(BASE_DIR, 'static'),
    'static/css/'
    # ("css",os.path.join(STATIC_ROOT,'css')),
    # ("js",os.path.join(STATIC_ROOT,'js')),
    ## 自定义路径        '/文件夹/文件夹/文件夹/',
]
TEMPLATES_DIRS = [
    os.path.join(BASE_DIR,'templates')
]
# 媒体    => 直接写会报错，需要在STATIC_URL 中把 /static/ 改成'/static/static/'
# MEDIA_URL = '/static/media/'
# 告诉项目去哪里找媒体文件
# MEDIA_ROOT = os.path.join(BASE_DIR,'static/media')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# 全文检索框架的配置
HAYSTACK_CONNECTIONS = {
    'default': {
        # 使用whoosh引擎
        # 'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
        # whoosh_cn_backend 中使用了jieba进行分词
        'ENGINE': 'TextbookRecom.whoosh_cn_backend.WhooshEngine',
        # 索引文件路径    在项目根路径下
        'PATH': os.path.join(BASE_DIR, 'whoosh_index'),
    }
}
# 当添加、修改、删除数据时，自动生成索引
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'


# SimpleUI配置

# 设置simpleui 点击首页图标跳转的地址
SIMPLEUI_INDEX = '/'
# 首页标题
SIMPLEUI_HOME_TITLE = '系统后台管理'
# 首页图标
SIMPLEUI_HOME_ICON = 'fa fa-user'

SIMPLEUI_ICON = {
    'Bookclass': 'el-icon-reading',
    '教材管理': 'el-icon-document-copy',
    'Users': 'el-icon-user',
    '用户管理': 'el-icon-user-solid',
}

# 离线模式
SIMPLEUI_STATIC_OFFLINE = False
# 隐藏右侧SimpleUI广告链接和使用分析
SIMPLEUI_HOME_INFO = False
SIMPLEUI_ANALYSIS = False
# 自定义侧边菜单栏
SIMPLEUI_CONFIG = {
    # 是否使用系统默认菜单，自定义菜单时建议关闭。
    'system_keep': False,
    # 用于菜单排序和过滤, 不填此字段为默认排序和全部显示。空列表[] 为全部不显示.
    'menu_display': ['教材管理', '用户管理', '权限认证'],
    # 设置是否开启动态菜单, 默认为False. 如果开启, 则会在每次用户登陆时刷新展示菜单内容。
    # 一般建议关闭。
    'dynamic': False,
    'menus': [
        {
             'name': '用户管理',
             'icon': 'fa fa-user',
             'models': [
                 {
                     'name': '用户列表',
                     # 注意url按'/admin/应用名小写/模型名小写/'命名。
                     'url': '/admin/users/users/',
                     'icon': 'fa fa-user'
                 },
             ]
         },

        # 教材管理
        # {
        #     'name': '教材管理',
        #     'icon': 'fa fa-th-list',
        #     'models': [
        #         {
        #             'name': '教材列表',
        #             # 注意url按'/admin/应用名小写/模型名小写/'命名。
        #             'url': '/admin/bookclass/tbook/',
        #             'icon': 'fa fa-tasks'
        #         },
        #     ]
        # },

        # {
        #     'app': 'auth',
        #     'name': '权限认证',
        #     'icon': 'fas fa-user-shield',
        #     'models': [
        #         {
        #             'name': '用户组',
        #             'icon': 'fa fa-th-list',
        #             'url': 'auth/group/'
        #         }
        #     ]
        # },
    ]
}

# 隐藏首页的快捷操作和最近动作
SIMPLEUI_HOME_QUICK = False
SIMPLEUI_HOME_ACTION = False

# 修改首页设置, 指向新创建的控制面板
SIMPLEUI_HOME_PAGE = '/users/dashboard/'
SIMPLEUI_HOME_TITLE = '首页'
SIMPLEUI_HOME_ICON = 'fa fa-eye'